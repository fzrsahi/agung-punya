---
import BaseLayout from "../layouts/BaseLayout.astro";
import CesiumApp from "../components/CesiumApp.astro";
---

<BaseLayout title="Simulasi Banjir 3D - Fitur">
  <main>
    --- // Tidak ada props sisi server yang diperlukan untuk contoh ini ---
    <div id="cesiumContainer"></div>

    <button id="raiseGeoJsonButton" class="control-button"
      >Up Water Level</button
    >

    <div id="rainControls" style="display: none;">
      {/* Style posisi dll. sekarang di global.css */}
      <label for="rainDuration">Durasi (jam):</label>
      <input type="number" id="rainDuration" min="1" max="24" value="2" /><br
      /><br />
      <button id="applyRain">Terapkan</button>
      <button id="cancelRain">Batal</button>
    </div>

    <script>
      import { initializeCesiumApp } from "../js/mainCesium.js";

      // Aman untuk memanggil langsung karena client:load memastikan DOM komponen siap
      // atau jika ada timing issue yang sangat spesifik, DOMContentLoaded bisa digunakan.
      // Untuk kebanyakan kasus di Astro dengan client:load, ini sudah cukup:
      initializeCesiumApp();
    </script>

    <style>
      /* Style spesifik untuk #cesiumContainer bisa di sini jika tidak di global.css */
      /* Namun, width:100% dan height:100% untuk #cesiumContainer lebih baik di global
     agar bisa mengisi body yang juga sudah 100% dari global.css */
      #cesiumContainer {
        width: 100%;
        height: 100vh; /* Akan mengisi parent (misalnya body jika layout benar) */
        /* atau height: 100vh; untuk mengisi tinggi viewport secara langsung */
        display: block;
      }
    </style>
    <!-- <CesiumApp client:load /> -->
  </main>
</BaseLayout>
